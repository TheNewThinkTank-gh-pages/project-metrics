name: Get gh repos

on:
  workflow_dispatch:

env:
  PROJECT_METRICS_GITHUB_PAT: ${{ secrets.PROJECT_METRICS_GITHUB_PAT }}
  PROJECT_METRICS_GITHUB_ACCESS_TOKEN: ${{ secrets.PROJECT_METRICS_GITHUB_ACCESS_TOKEN }}

jobs:
  generate_config:
    runs-on: ubuntu-latest

    env:
      PYTHONPATH: ${{ github.workspace }}/src

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
          cache: pip

      - name: Install and cache poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Cache poetry dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-

      - name: Install dependencies with poetry
        run: poetry install
        env:
          POETRY_VIRTUALENVS_IN_PROJECT: true
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Get gh repos
        run: |
          poetry run python src/util/get_gh_repos.py > gh_repos.json

      - name: Output Configuration
        id: repositories
        run: echo "repositories=$(cat gh_repos.json)" >> $GITHUB_OUTPUT

      - name: echo repository
        run: echo "${{ env.repositories }}"

  update_repos:
    needs:
      - generate_config

    runs-on: ubuntu-latest

    # strategy:
    #   matrix:
    #     repository: ${{ fromJson(needs.repositories.outputs.repositories) }}

    steps:
      - name: echo repository
        run: echo "${{ env.repositories }}"  # echo $GITHUB_OUTPUT  # ${{ matrix.repository }}

      # - name: Update repository
      #   run: python update_script.py ${{ matrix.repository }}
