name: Get Metrics

on:
  workflow_call:
    inputs:
      PYTHONVERSION:
        required: true
        type: string
    secrets:
      PROJECT_METRICS_GITHUB_ACCESS_TOKEN:
        required: true
      FG_GITHUB_ACCESS_TOKEN:
        required: true

jobs:
  get_metrics:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v5

      - name: Setup Python and Poetry
        uses: TheNewThinkTank/gh-actions/.github/actions/setup-python-poetry@v1.0.4  # main
        with:
          python-version: ${{ inputs.PYTHONVERSION }}

      - name: Get repos and sizes plot
        run: |
          poetry run python src/get_repo_size.py
        env:
          PROJECT_METRICS_GITHUB_ACCESS_TOKEN: ${{ secrets.PROJECT_METRICS_GITHUB_ACCESS_TOKEN }}

      - name: Get commit frequency plot
        run: |
          poetry run python src/REST/commits_over_time.py
        env:
          PROJECT_METRICS_GITHUB_ACCESS_TOKEN: ${{ secrets.PROJECT_METRICS_GITHUB_ACCESS_TOKEN }}

      # - name: Upload Plot Artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: generated-plots
      #     path: repo_size.png

      # - name: GitHub GraphQL largest repos
      #   run: |
      #       poetry run python src/gh_graphql_get_largest_repos.py

      # TODO: repos have tests (true/false, grouped).
      # e.g. test or tests folder exist and contains at least 1 non-empty file)

      # TODO: repos have GH Actions wf (true/false, grouped).
      # e.g. .github/workflows/ exist and contains at least 1 non-empty yaml/yml file)

      - name: REST repos missing description
        run: |
          poetry run python src/REST/project_metrics.py
        env:
          # FG_GITHUB_ACCESS_TOKEN: ${{ secrets.FG_GITHUB_ACCESS_TOKEN }}
          PROJECT_METRICS_GITHUB_ACCESS_TOKEN: ${{ secrets.PROJECT_METRICS_GITHUB_ACCESS_TOKEN }}

      - name: GH GraphQL most popular repos
        run: |
          poetry run python src/GraphQL/gh_get_popular_repos.py
        env:
          FG_GITHUB_ACCESS_TOKEN: ${{ secrets.FG_GITHUB_ACCESS_TOKEN }}
          PROJECT_METRICS_GITHUB_ACCESS_TOKEN: ${{ secrets.PROJECT_METRICS_GITHUB_ACCESS_TOKEN }}

      - name: GH GraphQL repos by lang
        run: |
          poetry run python src/GraphQL/gh_group_by_lang.py
        env:
          FG_GITHUB_ACCESS_TOKEN: ${{ secrets.FG_GITHUB_ACCESS_TOKEN }}
          PROJECT_METRICS_GITHUB_ACCESS_TOKEN: ${{ secrets.PROJECT_METRICS_GITHUB_ACCESS_TOKEN }}
